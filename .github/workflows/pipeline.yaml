name: "Deploy to Server"

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SERVER_IP: ${{ vars.SERVER_IP }}

    steps:
      - uses: actions/checkout@v3

      - name: "Build Docker Image"
        run: |
          echo "${{ secrets.DOCKERHUB_PAT }}" | docker login -u suzan1245 --password-stdin
          docker build -t suzan1245/mywebsite .
          docker push suzan1245/mywebsite
        env:
          DOCKERHUB_PAT: ${{ secrets.DOCKERHUB_PAT }}

      - name: "Configure SSH"
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
          touch ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: "Put SSH Key and Handle Known Hosts"
        run: |
          echo "${{ secrets.SSH_KEY64 }}" | base64 -d > pem.pem
          chmod 400 pem.pem

          # Remove previous known_hosts entry if it exists
          touch ~/.ssh/known_hosts
          if grep -q "$SERVER_IP" ~/.ssh/known_hosts; then
            ssh-keygen -R "$SERVER_IP"
          fi
        env:
          SSH_KEY64: ${{ secrets.SSH_KEY64 }}

      - name: "Pull Image and Restart Container on EC2"
        run: |
          ssh -o StrictHostKeyChecking=no -i pem.pem ubuntu@$SERVER_IP << 'EOF'
            docker pull suzan1245/mywebsite
            docker stop mynginx || true
            docker rm mynginx || true
            docker run --name mynginx -p 80:80 -d suzan1245/mywebsite
          EOF
